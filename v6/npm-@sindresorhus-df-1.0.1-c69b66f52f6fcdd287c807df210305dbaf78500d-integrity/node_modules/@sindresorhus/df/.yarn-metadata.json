{
  "manifest": {
    "name": "@sindresorhus/df",
    "version": "1.0.1",
    "description": "Get free disk space info from `df -kP`",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/df.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "node test.js"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "df",
      "dfkp",
      "df-kp",
      "disk",
      "space",
      "free",
      "info",
      "data",
      "fs",
      "filesystem",
      "file-system",
      "drive",
      "mount",
      "size",
      "capacity"
    ],
    "devDependencies": {
      "ava": "0.0.4"
    },
    "_registry": "npm",
    "_loc": "/code/v6/npm-@sindresorhus-df-1.0.1-c69b66f52f6fcdd287c807df210305dbaf78500d-integrity/node_modules/@sindresorhus/df/package.json",
    "readmeFilename": "readme.md",
    "readme": "# df [![Build Status](https://travis-ci.org/sindresorhus/df.svg?branch=master)](https://travis-ci.org/sindresorhus/df)\n\n> Get free disk space info from [`df -kP`](http://en.wikipedia.org/wiki/Df_\\(Unix\\))\n\nWorks on any Unix based system like OS X and Linux.\n\n*Created because all the other `df` wrappers are terrible. This one uses simple and explicit parsing. Uses `execFile` rather than `exec`. Ensures better platform portability by using the `-P` flag. Returns sizes in bytes instead of kilobytes and the capacity as a float.*\n\n\n## Install\n\n```\n$ npm install --save @sindresorhus/df\n```\n\n\n## Usage\n\n```js\nvar df = require('@sindresorhus/df');\n\ndf(function (err, list) {\n\tconsole.log(list);\n\t/*\n\t[{\n\t\tfilesystem: '/dev/disk1',\n\t\tsize: 499046809600,\n\t\tused: 443222245376,\n\t\tavailable: 55562420224,\n\t\tcapacity: 0.89,\n\t\tmountpoint: '/'\n \t }, ...]\n  */\n});\n\ndf.fs('/dev/disk1', function (err, data) {\n\tconsole.log(data);\n\t/*\n\t{\n\t\tfilesystem: '/dev/disk1',\n\t\t...\n \t }\n  */\n});\n\ndf.file(__dirname, function (err, data) {\n\tconsole.log(data);\n\t/*\n\t{\n\t\tfilesystem: '/dev/disk1',\n\t\t...\n \t }\n  */\n});\n```\n\n\n## API\n\n### df(callback)\n\n#### callback(error, list)\n\n*Required*  \nType: `function`\n\n##### list\n\nType: `array`\n\nList of `data` objects.\n\n### df.fs(filesystem, callback)\n\nGet space info for a specific filesystem.\n\n#### filesystem\n\n*Required*  \nType: `string`\n\n#### callback(error, data)\n\n*Required*  \nType: `function`\n\n##### data\n\nType: `object`\n\nData for the specified filesystem:\n\n- `filesystem` - The name of the filesystem.\n- `size` - Total size in bytes.\n- `used` - Used size in bytes.\n- `available` - Available size in bytes.\n- `capacity` - Capacity as a float from `0` to `1`.\n- `mountpoint` - Disk mount location.\n\n### df.file(file, callback)\n\nGet space info for the filesystem the supplied file is part of.\n\n#### file\n\n*Required*  \nType: `string`\n\n#### callback(error, data)\n\n*Required*  \nType: `function`\n\n##### data\n\nSame as `df.fs()`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sindresorhus/df/-/df-1.0.1.tgz#c69b66f52f6fcdd287c807df210305dbaf78500d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sindresorhus/df/-/df-1.0.1.tgz",
    "hash": "c69b66f52f6fcdd287c807df210305dbaf78500d",
    "integrity": "sha512-1Hyp7NQnD/u4DSxR2DGW78TF9k7R0wZ8ev0BpMAIzA6yTQSHqNb5wTuvtcPYf4FWbVse2rW7RgDsyL8ua2vXHw==",
    "registry": "npm",
    "packageName": "@sindresorhus/df",
    "cacheIntegrity": "sha512-1Hyp7NQnD/u4DSxR2DGW78TF9k7R0wZ8ev0BpMAIzA6yTQSHqNb5wTuvtcPYf4FWbVse2rW7RgDsyL8ua2vXHw== sha1-xptm9S9vzdKHyAffIQMF2694UA0="
  },
  "registry": "npm",
  "hash": "c69b66f52f6fcdd287c807df210305dbaf78500d"
}