{
  "manifest": {
    "name": "@sindresorhus/df",
    "version": "3.1.1",
    "description": "Get free disk space info from `df -kP`",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/df.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "df",
      "dfkp",
      "df-kp",
      "disk",
      "space",
      "free",
      "info",
      "data",
      "fs",
      "filesystem",
      "file-system",
      "drive",
      "mount",
      "size",
      "capacity"
    ],
    "dependencies": {
      "execa": "^2.0.1"
    },
    "devDependencies": {
      "ava": "^2.1.0",
      "tsd": "^0.7.1",
      "xo": "^0.24.0"
    },
    "_registry": "npm",
    "_loc": "/code/v6/npm-@sindresorhus-df-3.1.1-94200f9277e4a7fdd35ce8ab8b6bc5b52b164d31-integrity/node_modules/@sindresorhus/df/package.json",
    "readmeFilename": "readme.md",
    "readme": "# df [![Build Status](https://travis-ci.org/sindresorhus/df.svg?branch=master)](https://travis-ci.org/sindresorhus/df)\n\n> Get free disk space info from [`df -kP`](https://en.wikipedia.org/wiki/Df_\\(Unix\\))\n\nWorks on any Unix-based system like macOS and Linux.\n\n*Created because all the other `df` wrappers are terrible. This one uses simple and explicit parsing. Uses `execFile` rather than `exec`. Ensures better platform portability by using the `-P` flag. Returns sizes in bytes instead of kilobytes and the capacity as a float.*\n\n\n## Install\n\n```\n$ npm install @sindresorhus/df\n```\n\n\n## Usage\n\n```js\nconst df = require('@sindresorhus/df');\n\n(async () => {\n\tconsole.log(await df());\n\t/*\n\t[\n\t\t{\n\t\t\tfilesystem: '/dev/disk1',\n\t\t\tsize: 499046809600,\n\t\t\tused: 443222245376,\n\t\t\tavailable: 55562420224,\n\t\t\tcapacity: 0.89,\n\t\t\tmountpoint: '/'\n\t\t},\n\t\t…\n\t]\n\t*/\n\n\tconsole.log(await df.fs('/dev/disk1'));\n\t/*\n\t{\n\t\tfilesystem: '/dev/disk1',\n\t\t…\n\t}\n\t*/\n\n\tconsole.log(await df.file(__dirname));\n\t/*\n\t{\n\t\tfilesystem: '/dev/disk1',\n\t\t…\n\t}\n\t*/\n})();\n```\n\n\n## API\n\n### df()\n\nReturns a `Promise<Object[]>` with a list of space info objects for each filesystem.\n\n### df.fs(path)\n\nReturns a `Promise<Object>` with the space info for the given filesystem path.\n\n- `filesystem` - Name of the filesystem.\n- `size` - Total size in bytes.\n- `used` - Used size in bytes.\n- `available` - Available size in bytes.\n- `capacity` - Capacity as a float from `0` to `1`.\n- `mountpoint` - Disk mount location.\n\n#### path\n\nType: `string`\n\nPath to a [filesystem device file](https://en.wikipedia.org/wiki/Device_file). Example: `'/dev/disk1'`.\n\n### df.file(path)\n\nReturns a `Promise<Object>` with the space info for the filesystem the given file is part of.\n\n#### path\n\nType: `string`\n\nPath to a file on the filesystem to get the space info for.\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sindresorhus/df/-/df-3.1.1.tgz#94200f9277e4a7fdd35ce8ab8b6bc5b52b164d31",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sindresorhus/df/-/df-3.1.1.tgz",
    "hash": "94200f9277e4a7fdd35ce8ab8b6bc5b52b164d31",
    "integrity": "sha512-SME/vtXaJcnQ/HpeV6P82Egy+jThn11IKfwW8+/XVoRD0rmPHVTeKMtww1oWdVnMykzVPjmrDN9S8NBndPEHCQ==",
    "registry": "npm",
    "packageName": "@sindresorhus/df",
    "cacheIntegrity": "sha512-SME/vtXaJcnQ/HpeV6P82Egy+jThn11IKfwW8+/XVoRD0rmPHVTeKMtww1oWdVnMykzVPjmrDN9S8NBndPEHCQ== sha1-lCAPknfkp/3TXOiri2vFtSsWTTE="
  },
  "registry": "npm",
  "hash": "94200f9277e4a7fdd35ce8ab8b6bc5b52b164d31"
}