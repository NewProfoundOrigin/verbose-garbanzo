{
  "manifest": {
    "name": "exports-loader",
    "version": "5.0.0",
    "description": "exports loader module for webpack",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/exports-loader.git"
    },
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "homepage": "https://github.com/webpack-contrib/exports-loader",
    "bugs": {
      "url": "https://github.com/webpack-contrib/exports-loader/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/webpack"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 18.12.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "clean": "del-cli dist",
      "prebuild": "npm run clean",
      "build": "cross-env NODE_ENV=production babel src -d dist --copy-files",
      "commitlint": "commitlint --from=master",
      "security": "npm audit --production",
      "lint:prettier": "prettier --cache --list-different .",
      "lint:js": "eslint --cache .",
      "lint:spelling": "cspell --cache --no-must-find-files --quiet \"**/*.*\"",
      "lint": "npm-run-all -l -p \"lint:**\"",
      "fix:js": "npm run lint:js -- --fix",
      "fix:prettier": "npm run lint:prettier -- --write",
      "fix": "npm-run-all -l fix:js fix:prettier",
      "test:only": "cross-env NODE_ENV=test jest",
      "test:watch": "npm run test:only -- --watch",
      "test:coverage": "npm run test:only -- --collectCoverageFrom=\"src/**/*.js\" --coverage",
      "pretest": "npm run lint",
      "test": "npm run test:coverage",
      "prepare": "husky install && npm run build",
      "release": "standard-version"
    },
    "files": [
      "dist"
    ],
    "peerDependencies": {
      "webpack": "^5.0.0"
    },
    "dependencies": {
      "source-map": "^0.6.1"
    },
    "devDependencies": {
      "@babel/cli": "^7.23.4",
      "@babel/core": "^7.23.7",
      "@babel/preset-env": "^7.23.8",
      "@commitlint/cli": "^18.4.4",
      "@commitlint/config-conventional": "^18.4.4",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "babel-jest": "^29.7.0",
      "babel-loader": "^8.3.0",
      "cross-env": "^7.0.3",
      "cspell": "^8.3.2",
      "del": "^7.1.0",
      "del-cli": "^5.1.0",
      "eslint": "^8.56.0",
      "eslint-config-prettier": "^9.1.0",
      "eslint-plugin-import": "^2.29.1",
      "husky": "^8.0.3",
      "jest": "^29.7.0",
      "lint-staged": "^15.2.0",
      "memfs": "^4.6.0",
      "npm-run-all": "^4.1.5",
      "prettier": "^3.2.2",
      "standard-version": "^9.5.0",
      "webpack": "^5.89.0"
    },
    "keywords": [
      "webpack"
    ],
    "_registry": "npm",
    "_loc": "/code/v6/npm-exports-loader-5.0.0-0e5c50baf8526237c0a2743116a3e3fa788d194f-integrity/node_modules/exports-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![discussion][discussion]][discussion-url]\n[![size][size]][size-url]\n\n# exports-loader\n\nAllow to setup exports `module.exports`/`export` for source files.\n\nUseful when a source file does not contain exports or something does not export.\n\nFor further hints on compatibility issues, check out [Shimming](https://webpack.js.org/guides/shimming/) of the official docs.\n\n> **Warning**\n>\n> By default loader generate ES module named syntax.\n\n> **Warning**\n>\n> Be careful, existing exports (`export`/`module.exports`/`exports`) in the original code and exporting new values can cause a failure.\n\n## Getting Started\n\nTo begin, you'll need to install `exports-loader`:\n\n```console\nnpm install exports-loader --save-dev\n```\n\nor\n\n```console\nyarn add -D exports-loader\n```\n\nor\n\n```console\npnpm add -D exports-loader\n```\n\n### Inline\n\nThe `|` or `%20` (space) allow to separate the `syntax`, `name` and `alias` of export.\nThe documentation and syntax examples can be read [here](#syntax).\n\n> **Warning**\n>\n> `%20` is space in a query string, because you can't use spaces in URLs\n\nThen add the loader to the desired `import` statement or `require` calls. For example:\n\n```js\nimport { myFunction } from \"exports-loader?exports=myFunction!./file.js\";\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// export { myFunction }\n\nmyFunction(\"Hello world\");\n```\n\n```js\nimport {\n  myVariable,\n  myFunction,\n} from \"exports-loader?exports=myVariable,myFunction!./file.js\";\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// export { myVariable, myFunction };\n\nconst newVariable = myVariable + \"!!!\";\n\nconsole.log(newVariable);\n\nmyFunction(\"Hello world\");\n```\n\n```js\nconst {\n  myFunction,\n} = require(\"exports-loader?type=commonjs&exports=myFunction!./file.js\");\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// module.exports = { myFunction }\n\nmyFunction(\"Hello world\");\n```\n\n```js\n// Alternative syntax:\n// import myFunction from 'exports-loader?exports=default%20myFunction!./file.js';\nimport myFunction from \"exports-loader?exports=default|myFunction!./file.js\";\n// `%20` is space in a query string, equivalently `default myFunction`\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// exports default myFunction;\n\nmyFunction(\"Hello world\");\n```\n\n```js\nconst myFunction = require(\"exports-loader?type=commonjs&exports=single|myFunction!./file.js\");\n// `|` is separator in a query string, equivalently `single|myFunction`\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// module.exports = myFunction;\n\nmyFunction(\"Hello world\");\n```\n\n```js\nimport { myFunctionAlias } from \"exports-loader?exports=named|myFunction|myFunctionAlias!./file.js\";\n// `|` is separator in a query string, equivalently `named|myFunction|myFunctionAlias`\n// Adds the following code to the file's source:\n//\n// ...\n// Code\n// ...\n//\n// exports { myFunction as myFunctionAlias };\n\nmyFunctionAlias(\"Hello world\");\n```\n\nDescription of string values can be found in the documentation below.\n\n### Using Configuration\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        // You can use `regexp`\n        // test: /vendor\\.js/$\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: \"myFunction\",\n        },\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|           Name            |                   Type                    |   Default   | Description                 |\n| :-----------------------: | :---------------------------------------: | :---------: | :-------------------------- |\n|    **[`type`](#type)**    |                `{String}`                 |  `module`   | Format of generated exports |\n| **[`exports`](#exports)** | `{String\\|Object\\|Array<String\\|Object>}` | `undefined` | List of exports             |\n\n### `type`\n\nType: `String`\nDefault: `module`\n\nFormat of generated exports.\n\nPossible values - `commonjs` (CommonJS module syntax) and `module` (ES module syntax).\n\n#### `commonjs`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: \"Foo\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = { Foo };\n```\n\n#### `module`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"module\",\n          exports: \"Foo\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport { Foo };\n```\n\n### `exports`\n\nType: `String|Array`\nDefault: `undefined`\n\nList of exports.\n\n#### `String`\n\nAllows to use a string to describe an export.\n\n##### `Syntax`\n\nThe `|` or `%20` (space) allow to separate the `syntax`, `name` and `alias` of export.\n\nString syntax - `[[syntax] [name] [alias]]` or `[[syntax]|[name]|[alias]]`, where:\n\n- `[syntax]` (**may be omitted**) -\n\n  - if `type` is `module`- can be `default` and `named`,\n  - if `type` is `commonjs`- can be `single` and `multiple`\n\n- `[name]` - name of an exported value (**required**)\n- `[alias]` - alias of an exported value (**may be omitted**)\n\nExamples:\n\n- `[Foo]` - generates `export { Foo };`.\n- `[default Foo]` - generates `export default Foo;`.\n- `[named Foo]` - generates `export { Foo };`.\n- `[named Foo FooA]` - generates `export { Foo as FooA };`.\n- `[single Foo]` - generates `module.exports = Foo;`.\n- `[multiple Foo]` - generates `module.exports = { Foo };`.\n- `[multiple Foo FooA]` - generates `module.exports = { 'FooA': Foo };`.\n- `[named [name] [name]Alias]` - generates ES module named exports and exports a value equal to the filename under other name., for `single.js` it will be `single` and `singleAlias`, generates `export { single as singleAlias };`.\n\n> **Warning**\n>\n> You need to set `type: \"commonjs\"` to use `single` or `multiple` syntaxes.\n\n> **Warning**\n>\n> Aliases can't be used together with `default` or `single` syntaxes.\n\n##### Examples\n\n###### ES Module Default Export\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: \"default Foo\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport default Foo;\n```\n\n###### ES Module Named Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: \"named Foo FooA\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport { Foo as FooA };\n```\n\n###### CommonJS Single Export\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: \"single Foo\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = Foo;\n```\n\n###### CommonJS Multiple Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: \"multiple Foo FooA\",\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = { FooA: Foo };\n```\n\n#### `Object`\n\nAllows to use an object to describe an export.\n\nProperties:\n\n- `syntax` - can be `default` or `named` for the `module` type (`ES modules` module format), and `single` or `multiple` for the `commonjs` type (`CommonJS` module format) (**may be omitted**)\n- `name` - name of an exported value (**required**)\n- `alias` - alias of an exported value (**may be omitted**)\n\n##### Examples\n\n###### ES Module Default Export\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: {\n            syntax: \"default\",\n            name: \"Foo\",\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport default Foo;\n```\n\n###### ES Module Named Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: {\n            syntax: \"named\",\n            name: \"Foo\",\n            alias: \"FooA\",\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport { Foo as FooA };\n```\n\n###### CommonJS Single Export\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: {\n            syntax: \"single\",\n            name: \"Foo\",\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = Foo;\n```\n\n###### CommonJS Multiple Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: {\n            syntax: \"multiple\",\n            name: \"Foo\",\n            alias: \"FooA\",\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = { FooA: Foo };\n```\n\n#### `Array`\n\nAllow to specify multiple exports. Each item can be a [`string`](https://github.com/webpack-contrib/exports-loader#string) or an [`object`](https://github.com/webpack-contrib/exports-loader#object).\n\n> **Warning**\n>\n> Not possible to use `single` and `multiple` syntaxes together due to CommonJS format limitations.\n\n> **Warning**\n>\n> Not possible to use multiple `default` values due to ES module format limitations.\n\n> **Warning**\n>\n> Not possible to use multiple `single` values due to CommonJS format limitations.\n\n##### Examples\n\n###### CommonJS Multiple Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          type: \"commonjs\",\n          exports: [\"Foo\", \"multiple Bar\", \"multiple Baz BazA\"],\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nmodule.exports = { Foo, Bar, BazA: Bar };\n```\n\n###### ES Module Default Export And Named Exports Together\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: [\"default Foo\", \"named Bar BarA\"],\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport default Foo;\nexport { Bar as BarA };\n```\n\n###### Named Exports\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: require.resolve(\"./path/to/vendor.js\"),\n        loader: \"exports-loader\",\n        options: {\n          exports: [\n            { syntax: \"named\", name: \"Foo\", alias: \"FooA\" },\n            { syntax: \"named\", name: \"Bar\" },\n            \"Baz\",\n          ],\n        },\n      },\n    ],\n  },\n};\n```\n\nGenerate output:\n\n```js\n// ...\n// Code\n// ...\n\nexport { Foo as FooA, Bar, Baz };\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/exports-loader.svg\n[npm-url]: https://npmjs.com/package/exports-loader\n[node]: https://img.shields.io/node/v/exports-loader.svg\n[node-url]: https://nodejs.org\n[tests]: https://github.com/webpack-contrib/exports-loader/workflows/exports-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/exports-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/exports-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/exports-loader\n[discussion]: https://img.shields.io/github/discussions/webpack/webpack\n[discussion-url]: https://github.com/webpack/webpack/discussions\n[size]: https://packagephobia.now.sh/badge?p=exports-loader\n[size-url]: https://packagephobia.now.sh/result?p=exports-loader\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/exports-loader/-/exports-loader-5.0.0.tgz#0e5c50baf8526237c0a2743116a3e3fa788d194f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/exports-loader/-/exports-loader-5.0.0.tgz",
    "hash": "0e5c50baf8526237c0a2743116a3e3fa788d194f",
    "integrity": "sha512-W15EyyytBwd30yCCieTCqZSCUvU/o3etj2IUItSMjVQEzAf5xOQx8JL9iMo7ERnuAzIA6eapGSFWl7E9F+Wy9g==",
    "registry": "npm",
    "packageName": "exports-loader",
    "cacheIntegrity": "sha512-W15EyyytBwd30yCCieTCqZSCUvU/o3etj2IUItSMjVQEzAf5xOQx8JL9iMo7ERnuAzIA6eapGSFWl7E9F+Wy9g== sha1-DlxQuvhSYjfAonQxFqPj+niNGU8="
  },
  "registry": "npm",
  "hash": "0e5c50baf8526237c0a2743116a3e3fa788d194f"
}