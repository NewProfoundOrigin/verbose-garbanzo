{
  "manifest": {
    "name": "opts",
    "description": "Command line argument parser with automatic help text generation.",
    "version": "2.0.2",
    "author": {
      "name": "Oh Kay",
      "email": "khtdr.com@gmail.com",
      "url": "http://khtdr.com"
    },
    "homepage": "http://khtdr.com/opts",
    "repository": {
      "type": "git",
      "url": "https://github.com/khtdr/opts.git"
    },
    "bugs": {
      "url": "https://github.com/khtdr/opts/issues"
    },
    "main": "src/opts",
    "man": [
      "man.3"
    ],
    "types": "src/opts.d.ts",
    "license": "BSD-2-Clause",
    "keywords": [
      "command line parser",
      "opts",
      "args",
      "help text"
    ],
    "devDependencies": {
      "@types/node": "^12.12.0"
    },
    "_registry": "npm",
    "_loc": "/code/v6/npm-opts-2.0.2-a17e189fbbfee171da559edd8a42423bc5993ce1-integrity/node_modules/opts/package.json",
    "readmeFilename": "README.md",
    "readme": "\n# Table of Contents\n\n1.  [NAME](#orge2e86e0)\n2.  [SYNOPSIS](#org204fb4c)\n        1.  [running:](#orgb50b6e4)\n        2.  [produces:](#orgf51f8f5)\n        3.  [running:](#org8f49204)\n        4.  [produces:](#org3b1d910)\n        5.  [running:](#org24a1193)\n        6.  [produces:](#org12e29d4)\n3.  [INSTALLATION](#orgc33d993)\n    1.  [Stand-alone version](#org837b3bd)\n    2.  [NPM version](#orga066938)\n4.  [USAGE](#org55285ce)\n    1.  [LOADING](#org9df0af8)\n    2.  [CONFIGURING](#org5b0ccb9)\n        1.  [options](#org4ec5cb9)\n        2.  [arguments](#org73cc3f3)\n        3.  [help text generator](#org69f67a1)\n5.  [AUTHOR / CHANGELOG / LICENSE](#org702885b)\n\nFind the full documentation, source code, and examples online at <https://khtdr.com/opts>.\n\nOr download this README as a man-page.\n\n    curl -o opts.3 https://raw.githubusercontent.com/khtdr/opts/master/man.3\n    man ./opts.3\n\n\n<a id=\"orge2e86e0\"></a>\n\n# NAME\n\nopts.js - a command line parser for options and arguments\n\n\n<a id=\"org204fb4c\"></a>\n\n# SYNOPSIS\n\nThe following example uses a custom **version** function, and opts in to the automatic help text. No pun intended.\n\n    var opts = require('opts');\n    \n    var options = [\n      { short       : 'v'\n      , long        : 'version'\n      , description : 'Show version and exit'\n      , callback    : function () { console.log('v1.0'); process.exit(1); }\n      }\n    ];\n    \n    opts.parse(options, true);\n    console.log('Example 1');\n    process.exit(0);\n\nSee <https://raw.githubusercontent.com/khtdr/opts/master/examples/example1.js>\n\n\n<a id=\"orgb50b6e4\"></a>\n\n### running:\n\n    $ node ./example1\n\n\n<a id=\"orgf51f8f5\"></a>\n\n### produces:\n\n    Example 1\n\n\n<a id=\"org8f49204\"></a>\n\n### running:\n\n    $ node ./example1 --help\n\n\n<a id=\"org3b1d910\"></a>\n\n### produces:\n\n    Usage: node ./example1 [options]\n    Show this help message\n       --help\n    Show version and exit\n       -v, --version\n\n\n<a id=\"org24a1193\"></a>\n\n### running:\n\n    node ./example1 -v\n\n\n<a id=\"org12e29d4\"></a>\n\n### produces:\n\n    v1.0\n\n\n<a id=\"orgc33d993\"></a>\n\n# INSTALLATION\n\nYou do not need to use NPM or any package manager. It is written in plain-old Javascript and can be downloaded and included in your Node.js project, as-is. All of the examples use this approach.\n.RE\nSee <https://github.com/khtdr/opts/tree/master/examples>\n\n\n<a id=\"org837b3bd\"></a>\n\n## Stand-alone version\n\n    cd /path/to/your/project\n    curl -o opts.js https://raw.githubusercontent.com/khtdr/opts/master/src/opts.js\n\n\n<a id=\"orga066938\"></a>\n\n## NPM version\n\n    npm install opts\n\n\n<a id=\"org55285ce\"></a>\n\n# USAGE\n\n\n<a id=\"org9df0af8\"></a>\n\n## LOADING\n\nWith classic syntax:\n\n    var opts = require('opts');\n    opts.parse(options, arguments, help);\n\nWith modern syntax:\n\n    import * as opts from 'opts';\n    opts.parse(options, arguments, help);\n\nIf you installed `opts` with NPM, the typescript definitions should automatically be available in your editor. Otherwise you can download the .d.ts file manually.\n.RE\nSee <https://raw.githubusercontent.com/khtdr/opts/master/src/opts.d.ts>\n\n\n<a id=\"org5b0ccb9\"></a>\n\n## CONFIGURING\n\n`opts.parse(options, arguments, help)`\n\nOptions are flag-arguments. Arguments are everything else. Consider the following hypothetical command for starting a server that listens on <http://0.0.0.0:4000>\n\n    node ./my-app start --host 0.0.0.0 -p 4000\n\nIn this example, the options are `--host 0.0.0.0` and `-p 4000`. The argument is `start`. The arguments can be after, before, or among the options.\n\n\n<a id=\"org4ec5cb9\"></a>\n\n### options\n\n`options` is an array of option objects. Each option in the array can have the following fields. None are required, but you should at least provide a short or long name.\n\n    let options = [\n      { short       : 'l',\n        long        : 'list',\n        description : 'Show a list',\n        value       : false, // default false\n        required    : true, // default false\n        callback    : function (value) { ... },\n      }, // ... followed by more options\n    ];\n\n\n<a id=\"org73cc3f3\"></a>\n\n### arguments\n\n`arguments` require less configuration. This is an optional argument to `opts.parse`:\n\n    let arguments =\n      { name     : 'script',\n        required : true, // not required by default\n        callback : function (value) { ... },\n      };\n\n\n<a id=\"org69f67a1\"></a>\n\n### help text generator\n\nFinally, you can add an automatically generated help message by passing\na last parameter of `true`. This is also an optional argument to `opts.parse`.\n\n    opts.parse(options, true);\n    // or if you want more control, you can do:\n    /*\n      options.push({\n        long        : 'help',\n        description : 'Show this help message',\n        callback    : require('opts').help,\n      }\n      opts.parse(options);\n    */\n\n\n<a id=\"org702885b\"></a>\n\n# AUTHOR / CHANGELOG / LICENSE\n\nEmail: ohkay@khtdr.com\n\nRelatively unchanged since 2010.\n.RE\nSee <https://github.com/khtdr/opts/blob/master/CHANGES.org>\n\nBSD 2-Clause License\n.RE\nSee <https://github.com/khtdr/opts/blob/master/LICENSE.txt>\n\n",
    "licenseText": "BSD 2-Clause License\n\nCopyright (c) 2010, Joey Mazzarelli\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/opts/-/opts-2.0.2.tgz#a17e189fbbfee171da559edd8a42423bc5993ce1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/opts/-/opts-2.0.2.tgz",
    "hash": "a17e189fbbfee171da559edd8a42423bc5993ce1",
    "integrity": "sha512-k41FwbcLnlgnFh69f4qdUfvDQ+5vaSDnVPFI/y5XuhKRq97EnVVneO9F1ESVCdiVu4fCS2L8usX3mU331hB7pg==",
    "registry": "npm",
    "packageName": "opts",
    "cacheIntegrity": "sha512-k41FwbcLnlgnFh69f4qdUfvDQ+5vaSDnVPFI/y5XuhKRq97EnVVneO9F1ESVCdiVu4fCS2L8usX3mU331hB7pg== sha1-oX4Yn7v+4XHaVZ7dikJCO8WZPOE="
  },
  "registry": "npm",
  "hash": "a17e189fbbfee171da559edd8a42423bc5993ce1"
}