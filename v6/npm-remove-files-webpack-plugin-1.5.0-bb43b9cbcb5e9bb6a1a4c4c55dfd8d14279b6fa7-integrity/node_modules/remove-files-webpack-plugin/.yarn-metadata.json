{
  "manifest": {
    "name": "remove-files-webpack-plugin",
    "version": "1.5.0",
    "description": "A plugin for webpack that removes files and folders before and after compilation.",
    "main": "./src/index.js",
    "types": "./types/index.d.ts",
    "scripts": {
      "test": "mocha --recursive --reporter nyan --check-leaks",
      "test-coverage": "nyc --reporter=html --reporter=text yarn test --reporter list",
      "eslint": "./node_modules/.bin/eslint ./src/**/*.js",
      "eslint-codeframe": "yarn eslint --format codeframe",
      "eslint-fix": "yarn eslint --fix"
    },
    "homepage": "https://github.com/Amaimersion/remove-files-webpack-plugin/blob/master/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/Amaimersion/remove-files-webpack-plugin.git"
    },
    "bugs": {
      "url": "https://github.com/Amaimersion/remove-files-webpack-plugin/issues"
    },
    "author": {
      "name": "Sergey Kuznetsov",
      "url": "https://github.com/Amaimersion"
    },
    "license": "MIT",
    "dependencies": {
      "@types/webpack": "5.28.0",
      "trash": "7.2.0"
    },
    "devDependencies": {
      "chai": "^4.2.0",
      "eslint": "^6.8.0",
      "mocha": "^7.0.1",
      "nyc": "^15.0.0"
    },
    "peerDependencies": {
      "webpack": ">=2.2.0"
    },
    "engines": {
      "node": ">=8.3.0"
    },
    "keywords": [
      "webpack",
      "webpack-plugin",
      "webpack-compilation",
      "webpack-files",
      "compilation",
      "plugin",
      "files",
      "build-automation",
      "clean",
      "cleanup",
      "clean-plugin",
      "clean-webpack-plugin",
      "clean-files-plugin",
      "clean-files-webpack-plugin",
      "remove",
      "remove-plugin",
      "remove-webpack-plugin",
      "remove-files-plugin",
      "remove-files-webpack-plugin",
      "delete",
      "delete-plugin",
      "delete-webpack-plugin",
      "delete-files-plugin",
      "delete-files-webpack-plugin",
      "вебпак",
      "вебпак-автоматизация",
      "вебпак-файлы",
      "вебпак-компиляция",
      "компиляция",
      "удалить",
      "удаление",
      "очистка"
    ],
    "_registry": "npm",
    "_loc": "/code/v6/npm-remove-files-webpack-plugin-1.5.0-bb43b9cbcb5e9bb6a1a4c4c55dfd8d14279b6fa7-integrity/node_modules/remove-files-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "<h1 align=\"center\">\n    Removing of folders and files for Webpack\n</h1>\n\n<p align=\"center\">\n    A plugin for webpack that removes files and folders before and after compilation.\n</p>\n\n\n## Content\n\n- [Content](#content)\n- [Installation](#installation)\n- [Support](#support)\n- [Usage](#usage)\n- [Notes](#notes)\n  - [Symbolic links](#symbolic-links)\n- [Notes for Windows users](#notes-for-windows-users)\n  - [Single backward slash](#single-backward-slash)\n  - [Segment separator](#segment-separator)\n  - [Per-drive working directory](#per-drive-working-directory)\n- [Parameters](#parameters)\n  - [How to set](#how-to-set)\n  - [Namespace](#namespace)\n  - [Compilation modes](#compilation-modes)\n- [Examples](#examples)\n- [Version naming](#version-naming)\n- [Contribution](#contribution)\n- [License](#license)\n\n\n## Installation\n\n- With `npm`:\n```javascript\nnpm install remove-files-webpack-plugin\n```\n\n- With `yarn`:\n```javascript\nyarn add remove-files-webpack-plugin\n```\n\n\n## Support\n\nThe plugin works on any OS and webpack >= 2.2.0.\n\n\n## Usage\n\n```javascript\nconst RemovePlugin = require('remove-files-webpack-plugin');\n\nmodule.exports = {\n    plugins: [\n        new RemovePlugin({\n            before: {\n                // parameters for \"before normal compilation\" stage.\n            },\n            watch: {\n                // parameters for \"before watch compilation\" stage.\n            },\n            after: {\n                // parameters for \"after normal and watch compilation\" stage.\n            }\n        })\n    ]\n};\n```\n\n\n## Notes\n\n### Symbolic links\n\nSymbolic links (soft links) will be treated as ordinary files.\n\n\n## Notes for Windows users\n\n### Single backward slash\n\nJavaScript uses it for escaping. If you want to use backward slash, then use double backward slash. Example: `C:\\\\Windows\\\\System32\\\\cmd.exe`. By the way, single forward slashes are also supported.\n\n### Segment separator\n\nAll paths that you get or see from the plugin will contain platform-specific segment separator (i.e. slash): `\\\\` on Windows and `/` on POSIX. So, for example, even if you passed folders or files with `/` as separator, `TestObject.method` will give you a path with `\\\\` as segment separator.\n\n### Per-drive working directory\n\nFrom [Node.js documentation](https://nodejs.org/api/path.html#path_windows_vs_posix):\n> On Windows Node.js follows the concept of per-drive working directory. This behavior can be observed when using a drive path without a backslash. For example, `path.resolve('c:\\\\')` can potentially return a different result than `path.resolve('c:')`. For more information, see [this MSDN page](https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file#fully-qualified-vs-relative-paths).\n\n\n## Parameters\n\n|           Name           |                                             Type                                             |   Default   | Namespace |                                                                                                                                                          Description                                                                                                                                                          |\n| :----------------------: | :------------------------------------------------------------------------------------------: | :---------: | :-------: | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |\n|           root           |                                           `string`                                           |     `.`     |    All    |                                                                                             A root directory.<br>Not absolute paths will be appended to this.<br>Defaults to where `package.json` and `node_modules` are located.                                                                                             |\n|         include          |                                          `string[]`                                          |    `[]`     |    All    |                                                                                                                                               A folders or files for removing.                                                                                                                                                |\n|         exclude          |                                          `string[]`                                          |    `[]`     |    All    |                                                                                                                                               A folders or files for excluding.                                                                                                                                               |\n|           test           |                                        `TestObject[]`                                        |    `[]`     |    All    |                                                                                                                                                    A folders for testing.                                                                                                                                                     |\n|    TestObject.folder     |                                           `string`                                           |  Required   |    All    |                                                                                                                                          A path to the folder (relative to `root`).                                                                                                                                           |\n|    TestObject.method     |                             `(absolutePath: string) => boolean`                              |  Required   |    All    |                                                                                        A method that accepts an item path (`root` + folderPath + fileName) and<br>returns value that indicates should this item be removed or not.<br>                                                                                        |\n|   TestObject.recursive   |                                          `boolean`                                           |   `false`   |    All    |                                                                                                                                       Apply this method to all items in subdirectories.                                                                                                                                       |\n|       beforeRemove       | `(`<br>`absoluteFoldersPaths: string[],`<br>`absoluteFilesPaths: string[]`<br>`) => boolean` | `undefined` |    All    | If specified, will be called before removing.<br>Absolute paths of folders and files that<br>will be removed will be passed into this function.<br>If returned value is `true`,<br>then remove process will be canceled.<br>Will be not called if items for removing<br>not found, `emulate: true` or `skipFirstBuild: true`. |\n|       afterRemove        |  `(`<br>`absoluteFoldersPaths: string[],`<br>`absoluteFilesPaths: string[]`<br>`) => void`   | `undefined` |    All    |                                                     If specified, will be called after removing.<br>Absolute paths of folders and files<br>that have been removed will be passed into this function.<br>Will be not called if `emulate: true` or `skipFirstBuild: true`.                                                      |\n|          trash           |                                          `boolean`                                           |   `false`   |    All    |                                                                                                Move folders and files to the trash (recycle bin) instead of permanent removing.<br>**It is an async operation and you won't be able to control an execution chain along with other webpack plugins!**<br>`afterRemove` callback behavior is undefined (it can be executed before, during or after actual execution).<br>Requires Windows 8+, macOS 10.12+ or Linux.                                                                                                |\n|           log            |                                          `boolean`                                           |   `true`    |    All    |                                                                                                                   Print messages of \"info\" level<br>(example: \"Which folders or files have been removed\").                                                                                                                    |\n|        logWarning        |                                          `boolean`                                           |   `true`    |    All    |                                                                                                                      Print messages of \"warning\" level<br>(example: \"An items for removing not found\").                                                                                                                       |\n|         logError         |                                          `boolean`                                           |   `false`   |    All    |                                                                                                                          Print messages of \"error\" level<br>(example: \"No such file or directory\").                                                                                                                           |\n|         logDebug         |                                          `boolean`                                           |   `false`   |    All    |                                                                                                                                   Print messages of \"debug\" level<br>(used for debugging).                                                                                                                                    |\n|         emulate          |                                          `boolean`                                           |   `false`   |    All    |                                                                                            Emulate remove process.<br>Print which folders and files will be removed<br>without actually removing them.<br>Ignores `log` parameter.                                                                                            |\n|   allowRootAndOutside    |                                          `boolean`                                           |   `false`   |    All    |                                                                                Allow removing of `root` directory or outside `root` directory.<br>It is kind of safe mode.<br>**Don't turn it on if you don't know<br>what you actually do!**                                                                                 |\n| readWebpackConfiguration |                                          `boolean`                                           |   `false`   |    All    |                        Change parameters based on webpack configuration.<br>Following webpack parameters are supported: `stats` (controls logging).<br>These webpack parameters have priority over the plugin parameters.<br>See webpack documentation for more - https://webpack.js.org/configuration                        |\n|      skipFirstBuild      |                                          `boolean`                                           |   `false`   |  `watch`  |                                                                                                                                                 First build will be skipped.                                                                                                                                                  |\n|   beforeForFirstBuild    |                                          `boolean`                                           |   `false`   |  `watch`  |                                                                                                       For first build `before` parameters will be applied,<br>for subsequent builds `watch` parameters will be applied.                                                                                                       |  |  |  |  |  |\n\n### How to set\n\nYou can pass these parameters into any of the following keys: `before`, `watch` or `after`. Each key is optional, but at least one should be specified.\n\n- `before` – executes once before \"normal\" compilation.\n- `watch` – executes every time before \"watch\" compilation.\n- `after` – executes once after \"normal\" compilation and every time after \"watch\" compilation.\n\n### Namespace\n\n\"Namespace\" means where particular parameter will be applied. For example, \"All\" means particular parameter will work in any key (`before`, `watch`, `after`), `watch` means particular parameter will work only in `watch` key.\n\n### Compilation modes\n\n- \"normal\" compilation means full compilation.\n- \"watch\" compilation means first build is a full compilation and subsequent builds is a short rebuilds of changed files.\n\n\n## Examples\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Before compilation permanently removes\n     * entire `./dist` folder.\n     */\n    before: {\n        include: [\n            './dist'\n        ]\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Every time before \"watch\" compilation\n     * permanently removes `./dist/js/entry.js` file.\n     */\n    watch: {\n        include: [\n            './dist/js/entry.js'\n        ]\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * After compilation moves both\n     * `./dist/manifest.json` file and\n     * `./dist/maps` folder to the trash.\n     */\n    after: {\n        root: './dist',\n        include: [\n            'manifest.json',\n            'maps'\n        ],\n        trash: true\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Before compilation permanently removes both\n     * `./dist/manifest.json` file and `./dist/maps` folder.\n     * Log only works for warnings and errors.\n     */\n    before: {\n        include: [\n            'dist/manifest.json',\n            './dist/maps'\n        ],\n        log: false,\n        logWarning: true,\n        logError: true,\n        logDebug: false\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * After compilation permanently removes\n     * all maps files in `./dist/styles` folder and\n     * all subfolders (e.g. `./dist/styles/header`).\n     */\n    after: {\n        test: [\n            {\n                folder: 'dist/styles',\n                method: (absoluteItemPath) => {\n                    return new RegExp(/\\.map$/, 'm').test(absoluteItemPath);\n                },\n                recursive: true\n            }\n        ]\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * After compilation:\n     * - permanently removes all css maps in `./dist/styles` folder.\n     * - permanently removes all js maps in `./dist/scripts` folder and\n     * all subfolders (e.g. `./dist/scripts/header`).\n     */\n    after: {\n        root: './dist',\n        test: [\n            {\n                folder: './styles',\n                method: (absoluteItemPath) => {\n                    return new RegExp(/\\.css\\.map$/, 'm').test(absoluteItemPath);\n                }\n            },\n            {\n                folder: './scripts',\n                method: (absoluteItemPath) => {\n                    return new RegExp(/\\.js\\.map$/, 'm').test(absoluteItemPath);\n                },\n                recursive: true\n            }\n        ]\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Before compilation permanently removes all\n     * folders, subfolders and files from `./dist/maps`\n     * except `./dist/maps/main.map.js` file.\n     */\n    before: {\n        root: './dist'\n        /**\n         * You should do like this\n         * instead of `include: ['./maps']`.\n         */\n        test: [\n            {\n                folder: './maps',\n                method: () => true,\n                recursive: true\n            }\n        ],\n        exclude: [\n            './maps/main.map.js'\n        ]\n    },\n\n    /**\n     * After compilation permanently removes\n     * all css maps in `./dist/styles` folder\n     * except `popup.css.map` file.\n     */\n    after: {\n        test: [\n            {\n                folder: 'dist/styles',\n                method: (absoluteItemPath) => {\n                    return new RegExp(/\\.css\\.map$/, 'm').test(absoluteItemPath);\n                }\n            }\n        ],\n        exclude: [\n            'dist/styles/popup.css.map'\n        ]\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Before \"normal\" compilation permanently\n     * removes entire `./dist` folder.\n     */\n    before: {\n        include: [\n            './dist'\n        ]\n    },\n\n    /**\n     * Every time before compilation in \"watch\"\n     * mode (`webpack --watch`) permanently removes JS files\n     * with hash in the name (like \"entry-vqlr39sdvl12.js\").\n     */\n    watch: {\n        test: [\n            {\n                folder: './dist/js',\n                method: (absPath) => new RegExp(/(.*)-([^-\\\\\\/]+)\\.js/).test(absPath)\n            }\n        ]\n    },\n\n    /**\n     * Once after \"normal\" compilation or every time\n     * after \"watch\" compilation moves `./dist/log.txt`\n     * file to the trash.\n     */\n    after: {\n        include: [\n            './dist/log.txt'\n        ],\n        trash: true\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * Before compilation emulates remove process\n     * for a file that is outside of the root directory.\n     * That file will be moved to the trash in case of\n     * not emulation.\n     */\n    before: {\n        root: '.', // \"D:\\\\remove-files-webpack-plugin-master\"\n        include: [\n            \"C:\\\\Desktop\\\\test.txt\"\n        ],\n        trash: true,\n        emulate: true,\n        allowRootAndOutside: true\n    }\n})\n```\n\n```javascript\nnew RemovePlugin({\n    /**\n     * After compilation grabs all files from\n     * all subdirectories and decides should\n     * remove process be continued or not.\n     * If removed process is continued,\n     * then logs results with custom logger.\n     */\n    after: {\n        root: './dist',\n        test: [\n            {\n                folder: '.',\n                method: () => true,\n                recursive: true\n            }\n        ],\n        beforeRemove: (absoluteFoldersPaths, absoluteFilesPaths) => {\n            // cancel removing if there at least one folder.\n            if (absoluteFoldersPaths.length) {\n                return true;\n            }\n\n            // cancel removing if there at least one `.txt` file.\n            for (const item of absoluteFilesPaths) {\n                if (item.includes('.txt')) {\n                    return true;\n                }\n            }\n        },\n        afterRemove: (absoluteFoldersPaths, absoluteFilesPaths) => {\n            // replacing plugin logger with custom logger.\n            console.log('Successfully removed:');\n            console.log(`Folders – [${absoluteFoldersPaths}]`);\n            console.log(`Files – [${absoluteFilesPaths}]`);\n        },\n        log: false\n    }\n})\n```\n\n\n## Version naming\n\nThis project uses following structure for version naming: `<MAJOR RELEASE>.<BREAKING CHANGES>.<NOT BREAKING CHANGES>`.\n\n\n## Contribution\n\nFeel free to use [issues](https://github.com/Amaimersion/remove-files-webpack-plugin/issues/new/choose). [Pull requests](https://github.com/Amaimersion/remove-files-webpack-plugin/compare) are also always welcome!\n\n\n## License\n\n[MIT](https://github.com/Amaimersion/remove-files-webpack-plugin/blob/master/LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021 Sergey Kuznetsov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remove-files-webpack-plugin/-/remove-files-webpack-plugin-1.5.0.tgz#bb43b9cbcb5e9bb6a1a4c4c55dfd8d14279b6fa7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remove-files-webpack-plugin/-/remove-files-webpack-plugin-1.5.0.tgz",
    "hash": "bb43b9cbcb5e9bb6a1a4c4c55dfd8d14279b6fa7",
    "integrity": "sha512-PWxldMWpXKmqAv0Lc6Gy1+9QnMLJad94xKSrD3mJLHuZbifVcbTaJn5iZY1YUqPv56GnvMdJZfU8807NxKhtvg==",
    "registry": "npm",
    "packageName": "remove-files-webpack-plugin",
    "cacheIntegrity": "sha512-PWxldMWpXKmqAv0Lc6Gy1+9QnMLJad94xKSrD3mJLHuZbifVcbTaJn5iZY1YUqPv56GnvMdJZfU8807NxKhtvg== sha1-u0O5y8tem7ahpMTFXf2NFCebb6c="
  },
  "registry": "npm",
  "hash": "bb43b9cbcb5e9bb6a1a4c4c55dfd8d14279b6fa7"
}