{
  "manifest": {
    "name": "trash",
    "version": "7.2.0",
    "description": "Move files and folders to the trash",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/trash.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts",
      "lib"
    ],
    "keywords": [
      "trash",
      "recycle",
      "bin",
      "rm",
      "rmrf",
      "rimraf",
      "remove",
      "delete",
      "del",
      "file",
      "files",
      "directory",
      "directories",
      "folder",
      "folders",
      "xdg"
    ],
    "dependencies": {
      "@stroncium/procfs": "^1.2.1",
      "globby": "^7.1.1",
      "is-path-inside": "^3.0.2",
      "make-dir": "^3.1.0",
      "move-file": "^2.0.0",
      "p-map": "^4.0.0",
      "uuid": "^8.3.2",
      "xdg-trashdir": "^3.1.0"
    },
    "devDependencies": {
      "ava": "^2.4.0",
      "tempfile": "^3.0.0",
      "tsd": "^0.14.0",
      "xo": "^0.37.1"
    },
    "_registry": "npm",
    "_loc": "/code/v6/npm-trash-7.2.0-c5ad0c9b13d7e7cad0b4187b3cfe38cd8b39abe2-integrity/node_modules/trash/package.json",
    "readmeFilename": "readme.md",
    "readme": "# ![trash](media/logo.svg)\n\n> Move files and folders to the trash\n\nWorks on macOS (10.12+), Linux, and Windows (8+).\n\n**Note:** The Linux implementation is not very good and not maintained. Help welcome. If no one steps up to help maintain it, I will eventually remove Linux support.\n\nIn contrast to [`fs.unlink`](https://nodejs.org/api/fs.html#fs_fs_unlink_path_callback), [`del`](https://github.com/sindresorhus/del), and [`rimraf`](https://github.com/isaacs/rimraf) which permanently delete files, this only moves them to the trash, which is much safer and reversible.\n\n## Install\n\n```\n$ npm install trash\n```\n\n## Usage\n\n```js\nconst trash = require('trash');\n\n(async () => {\n\tawait trash(['*.png', '!rainbow.png']);\n})();\n```\n\n## API\n\n### trash(input, options?)\n\nReturns a `Promise`.\n\n#### input\n\nType: `string | string[]`\n\nAccepts paths and [glob patterns](https://github.com/sindresorhus/globby#globbing-patterns).\n\n#### options\n\nType: `object`\n\n##### glob\n\nType: `boolean`\\\nDefault: `true`\n\nEnable globbing when matching file paths.\n\n## CLI\n\nTo install the [`trash`](https://github.com/sindresorhus/trash-cli) command, run:\n\n```\n$ npm install --global trash-cli\n```\n\n## Info\n\nOn macOS, [`macos-trash`](https://github.com/sindresorhus/macos-trash) is used.\\\nOn Linux, the [XDG spec](https://standards.freedesktop.org/trash-spec/trashspec-1.0.html) is followed.\\\nOn Windows, [`recycle-bin`](https://github.com/sindresorhus/recycle-bin) is used.\n\n## FAQ\n\n### But I can do the same thing with `mv`\n\nNot really. The `mv` command isn't cross-platform and moving to trash is not just about moving the file to a \"trash\" directory. On all OSes you'll run into file conflicts. The user won't easily be able to restore the file. It won't work on an external drive. The trash directory location varies between Windows versions. For Linux, there's a whole [spec](https://standards.freedesktop.org/trash-spec/trashspec-1.0.html) you need to follow. On macOS, you'll lose the [Put back](https://mac-fusion.com/trash-tip-how-to-put-files-back-to-their-original-location/) feature.\n\n## Related\n\n- [trash-cli](https://github.com/sindresorhus/trash-cli) - CLI for this module\n- [empty-trash](https://github.com/sindresorhus/empty-trash) - Empty the trash\n- [del](https://github.com/sindresorhus/del) - Delete files and folders\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/trash/-/trash-7.2.0.tgz#c5ad0c9b13d7e7cad0b4187b3cfe38cd8b39abe2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/trash/-/trash-7.2.0.tgz",
    "hash": "c5ad0c9b13d7e7cad0b4187b3cfe38cd8b39abe2",
    "integrity": "sha512-3bR8Z5aWO8b9qybS6skBoaavH/hX9Onb1RrdIIhJxv9VpH3aBtpbKuAX4rIh/0xpDZ7K4ga36wONk/okbhjTlA==",
    "registry": "npm",
    "packageName": "trash",
    "cacheIntegrity": "sha512-3bR8Z5aWO8b9qybS6skBoaavH/hX9Onb1RrdIIhJxv9VpH3aBtpbKuAX4rIh/0xpDZ7K4ga36wONk/okbhjTlA== sha1-xa0MmxPX58rQtBh7PP44zYs5q+I="
  },
  "registry": "npm",
  "hash": "c5ad0c9b13d7e7cad0b4187b3cfe38cd8b39abe2"
}